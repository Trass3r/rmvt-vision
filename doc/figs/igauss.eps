%!PS-Adobe-2.0 EPSF-1.2
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: igauss.eps
%%CreationDate: 02/28/97  14:27:58
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%Pages: 1
%%BoundingBox:    60   209   558   583
%%EndComments

%%BeginProlog

% MathWorks dictionary
/MathWorks 150 dict begin

% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef

% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
/rm /rmoveto ldef
/rl /rlineto ldef
/s /show ldef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef

% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef

% orientation switch
/portraitMode 	0 def
/landscapeMode 	1 def

% coordinate system mappings
/dpi2point 0 def

% font control
/FontSize 0 def
/FMS {
	/FontSize xstore		%save size off stack
	findfont
	[FontSize 0 0 FontSize neg 0 0]
	makefont
	setfont
	}bdef

/reencode {
exch dup where
{pop load} {pop StandardEncoding} ifelse
exch
dup 3 1 roll
findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def
  currentdict
end
definefont pop
} bdef

/isroman {
findfont /CharStrings get
/Agrave known
} bdef

/FMSR {
3 1 roll 1 index
dup isroman
{reencode} {pop pop} ifelse
exch FMS
} bdef

/csm {
	1 dpi2point div -1 dpi2point div scale
	neg translate
	landscapeMode eq {90 rotate} if
	} bdef

% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4 dpi2point mul] 0 setdash } bdef

% macros for lines and objects
/L {
	lineto
	stroke
	} bdef
/MP {
	3 1 roll moveto
	1 sub {rlineto} repeat
	} bdef
/AP {
	{rlineto} repeat
	} bdef
/PP {
	closepath fill
	} bdef
/DP {
	closepath stroke
	} bdef
/MR {
	4 -2 roll moveto
	dup  0 exch rlineto
	exch 0 rlineto
	neg  0 exch rlineto
	closepath
	} bdef
/FR {
	MR stroke
	} bdef
/PR {
	MR fill
	} bdef
/L1i {
	{ currentfile picstr readhexstring pop } image
	} bdef

/tMatrix matrix def
/MakeOval {
	newpath
	tMatrix currentmatrix pop
	translate scale
	0 0 1 0 360 arc
	tMatrix setmatrix
	} bdef
/FO {
	MakeOval
	stroke
	} bdef
/PO {
	MakeOval
	fill
	} bdef

/PD {
	2 copy moveto lineto stroke
	} bdef


currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    60   209   558   583
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: graph1 1
bplot

/dpi2point 12 def
portraitMode 0216 7344 csm

  514   341  5976  4489 MR c np
76 dict begin %Colortable dictionary
/c0 { 0 0 0 sr} bdef
/c1 { 1 1 1 sr} bdef
/c2 { 1 0 0 sr} bdef
/c3 { 0 1 0 sr} bdef
/c4 { 0 0 1 sr} bdef
/c5 { 1 1 0 sr} bdef
/c6 { 1 0 1 sr} bdef
/c7 { 0 1 1 sr} bdef
%%IncludeResource: font Helvetica
/Helvetica /ISOLatin1Encoding 144 FMSR

1 j
c1
   0    0 6917 5188 PR
6 w
DO
4 w
SO
6 w
c0
3226 4616 mt 6258 3795 L
3226 4616 mt  899 3546 L
 899 3546 mt  899 1210 L
3226 4616 mt 3297 4649 L
3328 4797 mt 
(-5) s
4742 4205 mt 4813 4238 L
4845 4387 mt 
(0) s
6258 3795 mt 6329 3828 L
6361 3976 mt 
(5) s
3226 4616 mt 3150 4637 L
2953 4780 mt 
(-5) s
2062 4081 mt 1987 4102 L
1873 4245 mt 
(0) s
 899 3546 mt  823 3567 L
 710 3710 mt 
(5) s
 899 3546 mt  828 3513 L
 716 3552 mt 
(0) s
 899 3079 mt  828 3046 L
 516 3085 mt 
(0.01) s
 899 2612 mt  828 2579 L
 516 2617 mt 
(0.02) s
 899 2144 mt  828 2112 L
 516 2150 mt 
(0.03) s
 899 1677 mt  828 1644 L
 516 1683 mt 
(0.04) s
 899 1210 mt  828 1177 L
 516 1216 mt 
(0.05) s
gs 899 389 5360 4228 MR c np
% Quadrilateral Solid Rendering Routines
MathWorks begin
/quad_td {/Y3 xdef /X3 xdef /Y2 xdef /X2 xdef
          /Y1 xdef /X1 xdef /Y0 xdef /X0 xdef} bdef
/quad_td1 {/AX X3 X0 sub def /AY Y3 Y0 sub def
           /CX X1 X0 sub def /CY Y1 Y0 sub def
           /DX X0 def /DY Y0 def} bdef
/quad_td2 {/AX X1 X2 sub def /AY Y1 Y2 sub def
           /CX X3 X2 sub def /CY Y3 Y2 sub def
           /DX X2 def /DY Y2 def} bdef
0 0 0 0 0 0 0 0 quad_td quad_td1 quad_td2
/quad_cl {np DX DY mt AX AY rl CX AX sub CY AY sub rl cp c np} bdef
/quad_tf {[ AX AY CX CY DX DY ] cc} bdef
/quad_det { AX CY mul AY CX mul ne } bdef
/NI 16 def	% NI can be 4 (draft), 8 (medium) , or 16 (high-res)
/log2N 1 NI div log 2 log div cvi def
/N1 NI 1 sub def  /N2 NI NI mul def  /N21 N2 1 sub def
/CS 0.255 N1 div def  /C4S CS N1 div def
/interp_cd {3 index 2 copy sub CS mul /C30 xdef 0.255 mul /C0 xdef
            4 2 roll 2 copy sub neg CS mul /C10 xdef
            sub sub sub C4S mul /C4 xdef} bdef
            0 0 0 0 interp_cd
/interp_func {cvi dup N1 and exch log2N bitshift 2 copy
  mul C4 mul exch C10 mul add exch C30 mul add C0 add cvi} bdef
/interp_image{ 0 1 N21 { 1 index exch dup interp_func put } for pop} bdef
/read_image {currentfile exch readhexstring pop pop} bdef
/quad_im_str N2 string def  /intr_str N2 string def
/quad_img1 {N M 8 [ N 0 0 M 0 0 ] quad_im_str image} bdef
/quad_img2 {N M 8 [ N neg 0 0 M neg N M ] quad_im_str image} bdef
/quad_render_g {gs quad_td1 quad_cl quad_tf quad_det { quad_img1 } if gr
                gs quad_td2 quad_cl quad_tf quad_det { quad_img2 } if gr} bdef
/itg {/N NI def /M NI def /quad_im_str intr_str def
      interp_cd quad_im_str interp_image quad_td quad_render_g} bdef
/txg {/N xdef /M xdef quad_td /quad_im_str N M mul string def 
      quad_im_str read_image quad_render_g} bdef
end	% MathWorks dictionary
3861 2880 3628 2796 3931 2721 4164 2821 444 476 492 476 itg
3557 2914 3325 2862 3628 2796 3861 2880 380 460 476 444 itg
4093 2939 3861 2880 4164 2821 4397 2912 411 444 476 476 itg
3254 2924 3022 2921 3325 2862 3557 2914 349 427 460 380 itg
3790 2905 3557 2914 3861 2880 4093 2939 349 380 444 411 itg
4326 2974 4093 2939 4397 2912 4629 2996 411 411 476 476 itg
2951 2936 2718 2981 3022 2921 3254 2924 349 380 427 349 itg
3487 2815 3254 2924 3557 2914 3790 2905 349 349 380 349 itg
4559 3011 4326 2974 4629 2996 4862 3080 444 411 476 476 itg
4023 2840 3790 2905 4093 2939 4326 2974 349 349 411 411 itg
2648 2988 2415 3053 2718 2981 2951 2936 349 365 380 349 itg
/c8 { 0.349206 0.349206 0.349206 sr} bdef
c8
233 -109 303 -12 -233 207 3184 2729 4 MP
PP
2345 3100 2112 3145 2415 3053 2648 2988 349 380 365 349 itg
4791 3088 4559 3011 4862 3080 5095 3177 507 444 476 507 itg
4256 2779 4023 2840 4326 2974 4559 3011 396 349 411 444 itg
233 -65 303 90 -233 214 3720 2601 4 MP
PP
2041 3252 1809 3250 2112 3145 2345 3100 349 411 380 349 itg
233 -207 303 -52 -232 249 2880 2739 4 MP
PP
5024 3225 4791 3088 5095 3177 5327 3294 555 507 507 523 itg
1738 3406 1505 3355 1809 3250 2041 3252 349 444 411 349 itg
4488 2814 4256 2779 4559 3011 4791 3088 476 396 444 507 itg
232 -249 303 -112 -232 207 2577 2893 4 MP
PP
1435 3536 1202 3453 1505 3355 1738 3406 427 476 444 349 itg
233 -214 303 86 -232 361 3416 2368 4 MP
PP
5257 3402 5024 3225 5327 3294 5560 3424 587 555 523 539 itg
3952 2393 3720 2601 4023 2840 4256 2779 349 349 349 396 itg
232 -207 304 -152 -233 108 2274 3144 4 MP
PP
1132 3642 899 3542 1202 3453 1435 3536 476 492 476 427 itg
233 -108 303 -154 -233 8 1971 3398 4 MP
PP
4721 2993 4488 2814 4791 3088 5024 3225 571 476 507 555 itg
5489 3581 5257 3402 5560 3424 5793 3554 587 587 539 523 itg
1668 3595 1435 3536 1738 3406 1971 3398 365 427 349 349 itg
232 -361 304 -10 -233 422 3113 2317 4 MP
PP
4954 3268 4721 2993 5024 3225 5257 3402 634 571 555 587 itg
1364 3733 1132 3642 1435 3536 1668 3595 460 476 427 365 itg
4185 2366 3952 2393 4256 2779 4488 2814 476 349 396 476 itg
5722 3736 5489 3581 5793 3554 6025 3677 555 587 523 507 itg
5186 3547 4954 3268 5257 3402 5489 3581 666 634 587 587 itg
233 -422 303 -154 -233 360 2810 2533 4 MP
PP
232 -208 304 233 -233 350 3649 2018 4 MP
PP
233 -360 303 -251 -233 215 2507 2929 4 MP
PP
233 -215 303 -254 -232 65 2203 3333 4 MP
PP
1900 3631 1668 3595 1971 3398 2203 3333 349 365 349 349 itg
5955 3866 5722 3736 6025 3677 6258 3791 507 555 507 492 itg
5419 3770 5186 3547 5489 3581 5722 3736 619 666 587 555 itg
4418 2607 4185 2366 4488 2814 4721 2993 619 476 476 571 itg
1597 3817 1364 3733 1668 3595 1900 3631 444 460 365 349 itg
4650 3029 4418 2607 4721 2993 4954 3268 682 619 571 634 itg
4883 3457 4650 3029 4954 3268 5186 3547 714 682 634 666 itg
5652 3932 5419 3770 5722 3736 5955 3866 539 619 555 507 itg
233 -62 303 -298 -233 -36 2133 3667 4 MP
PP
5116 3780 4883 3457 5186 3547 5419 3770 682 714 666 619 itg
233 -350 303 51 -233 412 3346 1905 4 MP
PP
1830 3901 1597 3817 1900 3631 2133 3667 444 444 349 349 itg
232 -207 304 -404 -233 62 2436 3271 4 MP
PP
3882 1930 3649 2018 3952 2393 4185 2366 492 349 349 476 itg
5348 3991 5116 3780 5419 3770 5652 3932 571 682 619 539 itg
233 -351 303 -396 -232 207 2739 2722 4 MP
PP
233 -412 303 -216 -233 351 3043 2182 4 MP
PP
4812 3792 4580 3371 4883 3457 5116 3780 714 746 714 682 itg
4580 3371 4347 2796 4650 3029 4883 3457 746 730 682 714 itg
2062 3998 1830 3901 2133 3667 2366 3745 460 444 349 396 itg
4114 2232 3882 1930 4185 2366 4418 2607 682 492 476 619 itg
2366 3745 2133 3667 2436 3271 2669 3307 396 349 349 349 itg
4347 2796 4114 2232 4418 2607 4650 3029 730 682 619 682 itg
5045 4051 4812 3792 5116 3780 5348 3991 587 714 682 571 itg
233 -27 303 -549 -233 -36 2669 3307 4 MP
PP
3579 1791 3346 1905 3649 2018 3882 1930 492 349 349 492 itg
4509 3844 4277 3381 4580 3371 4812 3792 761 872 746 714 itg
2295 4115 2062 3998 2366 3745 2598 3881 492 460 396 444 itg
2598 3881 2366 3745 2669 3307 2901 3485 444 396 349 444 itg
4742 4123 4509 3844 4812 3792 5045 4051 603 761 714 587 itg
4277 3381 4044 2745 4347 2796 4580 3371 872 857 730 746 itg
2972 2695 2739 2722 3043 2182 3275 2094 349 349 349 365 itg
2901 3485 2669 3307 2972 2695 3205 2936 444 349 349 492 itg
3275 2094 3043 2182 3346 1905 3579 1791 365 349 349 492 itg
4206 3956 3973 3535 4277 3381 4509 3844 746 920 872 761 itg
2831 4059 2598 3881 2901 3485 3134 3761 507 444 444 539 itg
4044 2745 3811 2119 4114 2232 4347 2796 857 857 682 730 itg
3811 2119 3579 1791 3882 1930 4114 2232 857 492 492 682 itg
2528 4245 2295 4115 2598 3881 2831 4059 507 492 444 507 itg
4439 4215 4206 3956 4509 3844 4742 4123 587 746 761 603 itg
3134 3761 2901 3485 3205 2936 3437 3357 539 444 492 603 itg
3973 3535 3741 2961 4044 2745 4277 3381 920 777 857 872 itg
3903 4108 3670 3786 3973 3535 4206 3956 650 666 920 746 itg
3670 3786 3437 3357 3741 2961 3973 3535 666 603 777 920 itg
3367 4040 3134 3761 3437 3357 3670 3786 587 539 603 666 itg
3205 2936 2972 2695 3275 2094 3508 2396 492 349 365 603 itg
3064 4237 2831 4059 3134 3761 3367 4040 539 507 539 587 itg
3437 3357 3205 2936 3508 2396 3741 2961 603 492 603 777 itg
3741 2961 3508 2396 3811 2119 4044 2745 777 603 857 857 itg
4135 4320 3903 4108 4206 3956 4439 4215 555 650 746 587 itg
3600 4262 3367 4040 3670 3786 3903 4108 587 587 666 650 itg
3508 2396 3275 2094 3579 1791 3811 2119 603 365 492 857 itg
2760 4375 2528 4245 2831 4059 3064 4237 507 507 507 539 itg
3296 4392 3064 4237 3367 4040 3600 4262 523 539 587 587 itg
3832 4425 3600 4262 3903 4108 4135 4320 523 587 650 555 itg
2993 4498 2760 4375 3064 4237 3296 4392 507 507 539 523 itg
3529 4523 3296 4392 3600 4262 3832 4425 507 523 587 523 itg
3226 4612 2993 4498 3296 4392 3529 4523 492 507 523 507 itg

gr 
c8

end

eplot
%%EndObject graph 1

epage
end

showpage

%%Trailer
%%EOF
